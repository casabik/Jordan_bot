import html
import webbrowser

import telebot
from telebot import types
from telebot.apihelper import ApiTelegramException

bot = telebot.TeleBot('6192847761:AAEQMdItXVJVWijsSy4K5mZfyHsjmkSmYTI')

lines = open("konkurs.txt", "r", encoding="utf-8", errors='ignore')
print(lines)
c = 0
for line in lines:
    c += 1
    photo = ["1.jpg", "2.jpg", "3.jpg", "4.jpg", "5.jpg", "6.jpg", "7.jpg"]
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–•–æ—á—É –Ω–∞ –°–∞–π—Ç ‚ö°Ô∏è", url='https://jordanm.mobz.click/promo')
    markup.add(button)
    temp = line.strip().split()
    id = temp[0]
    print(c)
    try:
        bot.send_message(id,
                         text="–ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ —Å–≤–æ–π <a href='https://jordanm.mobz.click/promo'>—Å–∞–π—Ç</a> –∏ <b>—ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ</b> "
                              "–¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–æ–≤ <b>–¥–∞—Ä–∏–º —Ñ–ª–µ—à —Å–∫–∏–¥–∫—É –≤ üî•17%</b>üî•–ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É <b>flesh</b> "
                              "–Ω–∞ –≤—Å–µ –∫—É–ø–∞–ª—å–Ω–∏–∫–∏ –±–∏–∫–∏–Ω–∏! –°–∫–∏–¥–∫–∞ <b>–¥–µ–π—Å—Ç–≤—É–µ—Ç –≤—Å–µ–≥–æ 3 –¥–Ω—è</b> –¥–æ 16 –ê–≤–≥—É—Å—Ç–∞. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ "
                              "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ, —Ç–∞–∫ —á—Ç–æ –Ω–µ –∑–∞–±—É–¥—å –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –ø–æ–¥—Ä—É–∂–µ–∫. Have funüíñüíñüíñ\n \n(–î—É–±–ª–∏—Ä—É–µ–º"
                              " —Ä–∞—Å—Å—ã–ª–∫—É —Ç–∫ –≤ –ø—Ä–æ–º–æ–∫–æ–¥–µ –±—ã–ª–∞ –æ–ø–µ—á–∞—Ç–∫–∞) ü•π –∏–∑–≤–∏–Ω–∏—Ç–µü•π", reply_markup=markup,
                         parse_mode='html')
        bot.send_media_group(id,
                             [telebot.types.InputMediaPhoto(open(p, 'rb')) for p in photo])
    except ApiTelegramException as e:
        if e.description == "Forbidden: bot was blocked by the user":
            print("Attention please! The user {} has blocked the bot. I can't send anything to them")

'''
@bot.message_handler(commands=['start'])
def hello(message):
    markup = types.InlineKeyboardMarkup()
    kon = types.InlineKeyboardButton('–ö–û–ù–ö–£–†–°', callback_data='konkurs')
    markup.row(kon)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!\n–Ø –°—Ç–µ–ø–∞–Ω, —Ä–æ–±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ üòá',
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def button1(callback):
    if callback.data == 'konkurs':
        mark = types.InlineKeyboardMarkup()
        bot.send_chat_action(callback.message.chat.id, 'typing')
        kon = types.InlineKeyboardButton('–£—á–∞—Å—Ç–≤—É—é', callback_data='check')
        mark.row(kon)
        bot.send_message(callback.message.chat.id, f'–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∞–∂–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –∫–Ω–æ–ø–∫—É',
                         reply_markup=mark)
    elif callback.data == 'check2':
        res = bot.get_chat_member(chat_id='@LLL_Olya', user_id=callback.message.chat.id)
        if res.status == 'left':
            bot.answer_callback_query(callback.id, text="–ù—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª")
        else:
            ch = True
            lines = open('konkurs.txt', 'r')
            for line in lines:
                temp = line.strip().split()
                if int(temp[0]) == callback.message.chat.id:
                    ch = not ch
                    break
            lines.close()
            if not ch:
                bot.send_message(callback.message.chat.id, '–°–ø–∞—Å–∏–±–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ —Ç—ã –∏ —Ç–∞–∫ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.')
            else:
                lines = open('konkurs.txt', 'a')
                if callback.message.chat.username is not None:
                    lines.write(f'{callback.message.chat.id} {callback.message.chat.username} \n')
                else:
                    lines.write(
                        f'{callback.message.chat.id} {callback.message.chat.first_name} {callback.message.chat.last_name} \n')
                lines.close()
                bot.send_message(callback.message.chat.id, f'–°–ø–∞—Å–∏–±–æ, —Ç—ã –±–µ—Å–ø–æ–¥–æ–±–Ω–∞ üíò')
                bot.send_message(callback.message.chat.id,
                                 f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–∫—É—Ä—Å–∞ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≥—Ä—É–ø–ø—ã 30 –ò—é–Ω—è. –° –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω.')

    elif callback.data == 'check':
        res = bot.get_chat_member(chat_id='@LLL_Olya', user_id=callback.message.chat.id)
        if res.status == 'left':
            mark = types.InlineKeyboardMarkup()
            kon1 = types.InlineKeyboardButton('–ö–∞–Ω–∞–ª', url='https://t.me/LLL_Olya')
            kon2 = types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞–ª—Å—è‚úÖ', callback_data='check2')
            mark.row(kon1)
            mark.row(kon2)
            bot.send_message(callback.message.chat.id, f'–û–π –æ–π –æ–π, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∞–¥–æ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞ –Ω–∞—Å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è!',
                             reply_markup=mark)
        else:
            ch = True
            lines = open('konkurs.txt', 'r')
            for line in lines:
                temp = line.strip().split()
                if int(temp[0]) == callback.message.chat.id:
                    ch = not ch
                    break
            lines.close()
            if not ch:
                bot.send_message(callback.message.chat.id, '–°–ø–∞—Å–∏–±–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ —Ç—ã –∏ —Ç–∞–∫ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.')
            else:
                lines = open('konkurs.txt', 'a')
                if callback.message.chat.username is not None:
                    lines.write(f'{callback.message.chat.id} {callback.message.chat.username} \n')
                else:
                    lines.write(f'{callback.message.chat.id} {callback.message.chat.first_name} {callback.message.chat.last_name} \n')
                lines.close()
                bot.send_message(callback.message.chat.id, f'–°–ø–∞—Å–∏–±–æ, —Ç—ã –±–µ—Å–ø–æ–¥–æ–±–Ω–∞ üíò')
                bot.send_message(callback.message.chat.id,
                                 f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–∫—É—Ä—Å–∞ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≥—Ä—É–ø–ø—ã 30 –ò—é–Ω—è. –° –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω.')


bot.infinity_polling(none_stop=True)'''
